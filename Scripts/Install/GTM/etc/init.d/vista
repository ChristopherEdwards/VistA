#!/usr/bin/env bash
#---------------------------------------------------------------------------
# Copyright 2011-2012 The Open Source Electronic Health Record Agent
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#---------------------------------------------------------------------------

# init script for VistA

# Debian LSB info
### BEGIN INIT INFO
# Provides:          foiavista
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start VistA services at boot time
# Description:       Starts/Stops VistA instances in a sane way.
#                    Includes starting TaskMan.
### END INIT INFO

# this is a "softcode" when a VistA instance is created this line will be
# replace with the right instance
instance="FOIA"

# setup environment variables
# "softcoded" path as we don't know where the env script is
# replaced when a vista instance is created
source /home/$instance/etc/env

# Start VistA background tasks
start() {
    # TODO: logging

    # If a database is shutdown cleanly there shouldn't be anything in the
    # journals to replay, so we can run this without worry
    echo "Ensuring a consistant database (mupip recover -backward)"
    $gtm_dist/mupip journal -recover -backward $basedir/j/$instacne.mjl >> $basedir/log/journalRecovery.log 2>&1
    #fi

    # Start TaskMan
    $gtm_dist/mumps -run START^ZTMB
}
stop() {
    # TODO: logging

    # Stop TaskMan
    mumps -run STOP^ZTMB <"y\r\ny\n"
    
    # Wait for TaskMan to stop
    sleep 60

    # Look for mumps processes and terminate them nicely
    processes=$(psgrep mumps)
    if [ ! -z "${processes}" ] ; then
        for i in ${processes}
        do
            mupip stop ${i}
        done

        # Wait for process to react to mupip stop instead of force kill later
        sleep 5
    fi

    # Look for mumps processes that are still running
    processes=$(psgrep mumps)
    if [ ! -z "${processes}" ] ; then
        #TODO: logging required here
        echo "mumps process are being shutdown forcefully!"
        pkill -9 mumps
    fi
}

case "$1" in
    (start)
        start()
        ;;
    (stop)
        stop()
        ;;
    (restart)
        stop()
        start()
        ;;
    (*)
        echo "Usage: $0 {start|stop|restart}"
        ;;
esac
